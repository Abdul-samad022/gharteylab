:root {
  --navbar-height: 70px;
}

.navbar {
  height: var(--navbar-height);
}

body {
  padding-top: var(--navbar-height);
}

@media (max-width: 768px) {
  :root {
    --navbar-height: 150px; /* Adjust based on the stacked height */
  }
}
Using JavaScript:
If the navbar height is unpredictable, calculate it dynamically:

javascript
Copy code
window.addEventListener('resize', adjustBodyPadding);
window.addEventListener('DOMContentLoaded', adjustBodyPadding);

function adjustBodyPadding() {
  const navbarHeight = document.querySelector('.navbar').offsetHeight;
  document.body.style.paddingTop = `${navbarHeight}px`;
}
Final Adjusted CSS Example
Here's a cleaned-up version of your CSS with these fixes applied:

css
Copy code
html, body {
  height: 100%;
  margin: 0;
  display: flex;
  flex-direction: column;
}

body {
  width: 100%;
  height: 100vh;
  background-color: #1b1b32df;
  color: #f5f6f7;
  font-family: Arial, sans-serif;
  font-size: 16px;
  padding-top: var(--navbar-height); /* Dynamic padding */
}

.navbar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 70px; /* Set a fixed height */
  background-color: #ffffff;
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-items: center;
}

.navbar a {
  color: #00000080;
  text-decoration: none;
  padding: 10px 20px;
  font-size: 16px;
  margin: 0 15px;
  display: inline-block;
  transition: color 0.3s, background-color 0.3s;
}

.navbar a:hover {
  color: #f0f0f0;
  background-color: #2b2b52;
  border-radius: 5px;
}

.navbar a.active {
  background-color: #2b2b52;
  color: #ffffff;
}

@media (max-width: 768px) {
  :root {
    --navbar-height: 150px; /* Adjust for stacked layout */
  }

  .navbar {
    flex-direction: column;
    align-items: center;
  }

  .navbar a {
    width: 100%;
    text-align: center;
    margin: 5px 0;
  }
}

main {
  flex: 1;
  padding: 20px;
}
